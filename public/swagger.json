{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Yet Another Node.js Blogg Application API",
    "description": "Yet Another Node.js Blogg Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "api-challenge-omega.vercel.app",
  "basePath": "",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/create-item-delivery": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Item will be delivered soon!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/get-item-delivery": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/getOneItem"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an especific item delivery",
        "responses": {
          "200": {
            "description": "Item will be delivered soon!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/delete-item-delivery": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/getOneItem"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an especific item delivery",
        "responses": {
          "200": {
            "description": "Item will be delivered soon!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/update-item-delivery-status": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/getOneItem"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an especific item delivery",
        "responses": {
          "200": {
            "description": "Item will be delivered soon!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "itemName",
        "receiverCEP",
        "receiverName",
        "senderCEP",
        "senderName"
      ],
      "properties": {
        "itemName": {
          "type": "string"
        },
        "receiverCEP": {
          "type": "string"
        },
        "receiverName": {
          "type": "string"
        },
        "senderCEP": {
          "type": "string"
        },
        "senderName": {
          "type": "string"
        }
      }
    },
    "getOneItemModel": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "number"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "getOneItem": {
      "type": "array",
      "$ref": "#/definitions/getOneItemModel"
    }
  }
}
